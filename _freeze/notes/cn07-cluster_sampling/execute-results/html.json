{
  "hash": "44bb79204b94c61cffe61c5eb4edc525",
  "result": {
    "markdown": "---\ntitle: \"Cluster Sampling\"\ndescription: \"Selecting groups at . Lohr Ch 5. \"\nauthor: DRAFT - 458 class\ndate: 3/20/23\nexecute: \n  error: true\n  warning: false\n  message: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here); library(tidyverse);library(knitr)\nlibrary(sampling); library(survey)\n```\n:::\n\n\n# Introduction\n\n\n## Why use Cluster Sampling? \n\n\n------------------------------------------------------------------------\n\n# One-Stage Clustering Sampling \n\n## Equal size clusters\n\n* Each _psu_ has the same number of elements; $M_{i} = m_{i} = M$.\n* Often can be found in agriculture or industrial sampling. \n* $t_{i}$ is the total for all elements in _psu_ $i$. \n* $t_{i}$ is known for sampled households, since data is collected on both individuals. (E.g. $Var(t_{i})=0$)\n\n:arrow_right: Treat the _psu_ means or totals as observations, and ignore the individual elements. We now have an SRS of $n$ data points. \n\nThus we can use the same SRS formulas to estimate the total and mean, **however** this is an SRS of $n$ _psu_'s, not an SRS of $nM$ observational units. So the $df$ needed to create a Confidence Interval is $n-1$. \n\nTo estimate the population total $t$ or average $\\mu$, we can use the following estimators and variances: \n\n$$\n\\hat{t} = \\frac{N}{n}\\sum_{i \\in S}t_{i} \\qquad \ns_{t}^{2} = \\frac{1}{n-1}\\sum_{i \\in S}\\Big(t_{i} - \\frac{\\hat{t}}{N}\\Big)^2\n$$\n\nand \n$$\n\\hat{\\bar{y}} = \\frac{\\hat{t}}{NM} \\qquad\nV(\\hat{\\bar{y}}) = \\Big(1-\\frac{n}{N}\\Big)\\frac{s^{2}_t}{nM^2}\n$$\n\n:::{.callout-tip icon=true}\n### Estimate the income in a two person households\n\nConsider individual incomes ($y_{ij}$) for each of $j=1,2$ persons in the 3 sampled households out of the 50 in the population. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nhhi <- data.frame(\n  household = c(1:3), \n  yi1 = c(37638, 69012, 30001), \n  yi2 = c(79999, 86753, 54321)\n)\nkable(hhi, align = 'c')\n```\n\n::: {.cell-output-display}\n| household |  yi1  |  yi2  |\n|:---------:|:-----:|:-----:|\n|     1     | 37638 | 79999 |\n|     2     | 69012 | 86753 |\n|     3     | 30001 | 54321 |\n:::\n:::\n\n:::\n\nFirst define our known values: N = 50, n = 3, M = 2. \n\nThe total household income $t_i$ is calculated as the sum of the individual incomes within each cluster $\\sum_j y_{ij}$. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nhhi$ti <- hhi$yi1 + hhi$yi2\nhhi\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  household   yi1   yi2     ti\n1         1 37638 79999 117637\n2         2 69012 86753 155765\n3         3 30001 54321  84322\n```\n:::\n:::\n\n\nThe estimated mean is\n\n::: {.cell}\n\n```{.r .cell-code}\nt.hat <- (50/3)*sum(hhi$ti)\n(ybar.hat <- t.hat / (50*2))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 59620.67\n```\n:::\n:::\n\n\nwith variance\n\n::: {.cell}\n\n```{.r .cell-code}\ns2.t <- (1/(3-1))*sum((hhi$ti - t.hat/50)^2)\n(var.ybar.hat <- (1 - 3/50)*(s2.t/(3*2^2)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 100106551\n```\n:::\n:::\n\n\nCalculate CI. \n\n::: {.cell}\n\n```{.r .cell-code}\ncrit.t <- qt(.975, 3-1)\nci.low.mu  <- ybar.hat - crit.t*sqrt(var.ybar.hat)\nci.hi.mu   <- ybar.hat + crit.t*sqrt(var.ybar.hat)\n```\n:::\n\n\nWe can be 95% confident that the average population income for a household of two people is contained in the interval ($16,571, $102,670. \n\n\n:::{.callout-warning icon=false}\n### :star: You try it: Average GPA in a dorm\n\nA student wants to estimate the average GPA in their dorm. Obtaining a listing of all students in the hall and conducting an SRS would take a lot of time. Instead, since each of the 100 suites in the hall have 4 students, the student randomly samples 5 suites and collects GPA data for each student in the suite. \n\nUsing functions from the `sampling` package, estimate the average GPA for all students living in that dorm, with a proper 95% CI. Interpret your interval.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngpa <- readr::read_csv(here::here(\"data\", \"gpa.csv\"))\nhead(gpa)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 Ã— 3\n  suite   gpa    wt\n  <dbl> <dbl> <dbl>\n1     1  3.08    20\n2     1  2.6     20\n3     1  3.44    20\n4     1  3.04    20\n5     2  2.36    20\n6     2  3.04    20\n```\n:::\n:::\n\n\nThe data was recorded in long format -- this is the format needed for analysis. The table in the book is formatted for human eyeball consumption, not for analysis. \n:::\n\n1. Set the survey design. \n\n::: {.cell}\n\n```{.r .cell-code}\ngpa.design <- svydesign(id = ~suite,\n                        weights = ~wt,\n                        fpc=~rep(100,20),\n                        data=gpa) \n```\n:::\n\n\n2. Call `surveymean` and CI. \n\n::: {.cell}\n\n```{.r .cell-code}\n(dorm.gpa.mean <- svymean(~gpa, gpa.design))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     mean     SE\ngpa 2.826 0.1637\n```\n:::\n\n```{.r .cell-code}\n(df <- degf(gpa.design)) # Extract degrees of freedom\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n\n```{.r .cell-code}\nconfint(dorm.gpa.mean, level=.95, df=4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       2.5 %   97.5 %\ngpa 2.371593 3.280407\n```\n:::\n:::\n\n\nWe can be 95% confident that the average GPA for students living in this dorm is contained in the interval 2.37 to 3.28. \n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}