{
  "hash": "826c65ca6247062fbcdd622d5f84e102",
  "result": {
    "markdown": "---\ntitle: \"Stratified Sampling\"\ndescription: \"A method to use additional information about the population in the survey design\"\nauthor: DRAFT - Sp '25 458 class\ndate: 3/5/25\nexecute: \n  error: true\n  warning: false\n  message: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse);library(knitr)\nlibrary(sampling); library(survey)\n# Load data\nagpop <- read_csv(here::here(\"data\", \"agpop.csv\"))\nagstrat <- read_csv(here::here(\"data\", \"agstrat.csv\"))\n```\n:::\n\n\n# What is Stratified Sampling\n\n## Overview\n\n### Why Use A Stratified Sample?\n\n\n::: {.callout-tip icon=\"true\"}\n### Motivating Example - Estimating the average number of farm acres.\n\n:::\n\n\n::: {.callout-tip icon=\"true\"}\n### Exploring the distribution of farm acreage in 1992 by region.\n\n\n:::\n\n::: {.callout-warning icon=\"false\"}\n### You try it.\n\nExplore the distribution of farm acreage in 1987 by region. Create a table of summary statistics and a boxplot. Discuss your findings.\n:::\n\n::: {.callout-warning icon=\"false\" collapse=\"true\" appearance=\"minimal\"}\n### Solution\n\n:::\n\n## Gain from stratification\n\n::: callout-important\n### Definition: Relative gain from stratification\n\n:::\n\n### Clean up\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm()\n```\n:::\n\n\n\n# Theory of Stratified Sampling (Lohr 3.2)\n\n## Notation and Formulas used in Stratified Random Sampling\n\n\n## Confidence Interval for Stratified Random Sample\n\n::: {.callout-tip icon=\"true\"}\n### Example: Estimate the total number of farm acres in 1992 (Table 3.2)\n\n\n:::\n\n\n::: {.callout-warning icon=\"false\"}\n### You try it\n\nSiniff and Skoog (1964) ...\n:::\n\n::: {.callout-warning icon=\"false\" collapse=\"true\" appearance=\"minimal\"}\n### Solution\n:::\n\n\n\n\n::: {.callout-warning icon=\"false\"}\n### You try it\n\nThe ACLS intends to use a stratified random sample to study publications and library use among members. They divide their data into discipline, making 7 stratas.\n\nUse the summary table below to estimate the the percentage and number of respondents that are female in those seven disciplines.\n\n:::\n\n::: {.callout-warning icon=\"false\" collapse=\"true\" appearance=\"minimal\"}\n### Solution\n\n:::\n\n::: {.callout-note icon=\"false\" collapse=\"true\" appearance=\"minimal\"}\n### Clean up\n\n:::\n\n# Sampling Weights\n\n## How are weights calculated?\n\n## How are weights used?\n\n::: {.callout-tip icon=\"true\"}\n### Example: Re-Estimate the total number of farm acres in 1992 using sample weights\n\n:::\n\n::: {.callout-warning icon=\"true\"}\n### You try it Caribou weights\n\n:::\n\n::: {.callout-note icon=\"false\" collapse=\"true\" appearance=\"minimal\"}\n### Clean up\n\n\n:::\n\n------------------------------------------------------------------------\n\n# Allocation Methods\n\n:::{.callout-important}\n### Method 1: Proportional Allocation\n\n:::\n\n\n\n:::{.callout-important}\n### Method 2: Optimal Allocation\n\n:::\n\n  \n:::{.callout-important}\n### Method 3: Allocation for Specified Precision within Strata\n\n:::\n\n\n## Which allocation to use?\n\n\n# Selecting Strata\n\n\n### Defining Strata\n\n\n### How Many Strata?\n\n\n:::{.callout-tip icon=true}\n### Example: Estimating homeless population from NYC\n\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n# Summary\n\n    \n------------------------------------------------------------------------\n\n# Using R\n\n## Selecting a Stratified Random Sample\n\n### Using the `strata` function from the `sampling` package\n\n1.  Sort the data by the stratification variable\n\n\n::: {.cell}\n\n```{.r .cell-code}\nagpop.sorted <- agpop %>% arrange(region)\n```\n:::\n\n\n2.  Specify the desired within-strata sample sizes $n_{k}$.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn.k <- c(103, 21, 135, 41)\n```\n:::\n\n\n3.  Create the sampling index of records to select using the `strata` function with arguments specifying the strata names, strata size, and sampling method within strata.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstrat.idx <- sampling::strata(data = agpop.sorted, stratanames = \"region\", \n                    size = n.k, method = \"srswor\")\n```\n:::\n\n\n:warning: Package conflicts can occur with the `strata` function. If it is not working for you, use the `sampling::strata` method of calling the function to ensure you are using the correct version of the `strata` function from the `sampling` package.\n\n4.  Extract the data records that correspond to the sampling index.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nag.str <- getdata(agpop.sorted, strat.idx)\nhead(ag.str)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               county state acres92 acres87 acres82 farms92 farms87 farms82\n5      AUDUBON COUNTY    IA  268506  268437  283782     740     851     905\n12      BUTLER COUNTY    IA  315448  328114  336000    1146    1294    1467\n17 CERRO GORDO COUNTY    IA  308497  317974  327445     821     929    1045\n30   DICKINSON COUNTY    IA  202249  211002  227557     554     593     652\n31     DUBUQUE COUNTY    IA  343870  334112  338912    1653    1689    1708\n48        IOWA COUNTY    IA  321285  329705  361465     977    1057    1150\n   largef92 largef87 largef82 smallf92 smallf87 smallf82 region ID_unit\n5        45       30       25       60       79       39     NC       5\n12       32       23       21      116      129      139     NC      12\n17       53       44       50       54       61       80     NC      17\n30       30       34       31       38       47       43     NC      30\n31       13       10        8      107      128       88     NC      31\n48       43       32       36       58       64       62     NC      48\n         Prob Stratum\n5  0.09772296       1\n12 0.09772296       1\n17 0.09772296       1\n30 0.09772296       1\n31 0.09772296       1\n48 0.09772296       1\n```\n:::\n:::\n\n\n5.  Calculate the sampling weights using the inclusion probabilities (these were created as the variable `Prob` when you used the `strata` function)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nag.str$wt <- 1/ag.str$Prob\nhead(ag.str)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               county state acres92 acres87 acres82 farms92 farms87 farms82\n5      AUDUBON COUNTY    IA  268506  268437  283782     740     851     905\n12      BUTLER COUNTY    IA  315448  328114  336000    1146    1294    1467\n17 CERRO GORDO COUNTY    IA  308497  317974  327445     821     929    1045\n30   DICKINSON COUNTY    IA  202249  211002  227557     554     593     652\n31     DUBUQUE COUNTY    IA  343870  334112  338912    1653    1689    1708\n48        IOWA COUNTY    IA  321285  329705  361465     977    1057    1150\n   largef92 largef87 largef82 smallf92 smallf87 smallf82 region ID_unit\n5        45       30       25       60       79       39     NC       5\n12       32       23       21      116      129      139     NC      12\n17       53       44       50       54       61       80     NC      17\n30       30       34       31       38       47       43     NC      30\n31       13       10        8      107      128       88     NC      31\n48       43       32       36       58       64       62     NC      48\n         Prob Stratum       wt\n5  0.09772296       1 10.23301\n12 0.09772296       1 10.23301\n17 0.09772296       1 10.23301\n30 0.09772296       1 10.23301\n31 0.09772296       1 10.23301\n48 0.09772296       1 10.23301\n```\n:::\n:::\n\n\n5b. Check that the sampling weights sum to the stratum population sizes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nag.str %>% group_by(region) %>% summarize(sum.wts = sum(wt))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 Ã— 2\n  region sum.wts\n  <chr>    <dbl>\n1 NC        1054\n2 NE         220\n3 S         1382\n4 W          422\n```\n:::\n\n```{.r .cell-code}\ntable(agpop.sorted$region)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  NC   NE    S    W \n1054  220 1382  422 \n```\n:::\n:::\n\n\n::: callout-important\n### Warning\n\nIf the weights do not sum to the stratum population sizes, you have made a mistake somewhere in the calculations for the weights or strata sizes.\n:::\n\n\n------------------------------------------------------------------------\n\n## Computing Statistics from a Stratified Random Sample\n\n### 1. Setup the information for the survey design.\n\n#### a. Specify weights\n\nWe created the weights in the dataset in the the last step.\n\n#### b. Specify fpc\n\nWe need to create a vector of fpc's that are equal to the strata population size. In a SRS, we used `fpc = rep(N,n)`. This create a vector that contains the value `N`, repeated `n` times. In this case, we need to match the strata population size to each record from that strata.\n\nOption 1: Create a vector that repeats the values in the vector `N.k`, each `n.k` times.\n\n\n::: {.cell}\n\n```{.r .cell-code}\noption1.fpc <- rep(N.k, n.k)\n```\n:::\n\n\n::: {.callout-tip icon=\"false\" collapse=\"true\" appearance=\"minimal\"}\n**Example on how to use the `rep` function**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nex.N.k <- c(10,25,50) # example population sizes\nex.n.k <- c(2,5,10)   # example strata sizes\nrep(ex.N.k, ex.n.k)   \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 10 10 25 25 25 25 25 50 50 50 50 50 50 50 50 50 50\n```\n:::\n:::\n\n\nThe pop size for stratum 1 is repeated twice (the size of the sample from that stratum), the pop size for stratum 2 is repeated 5 times (the sample size for stat stratum) etc.\n:::\n\nOption 2: Merge the pop sizes onto the sample data using `region` as a joining key\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(pop.strata.sizes <- table(agpop.sorted$region) %>% data.frame())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Var1 Freq\n1   NC 1054\n2   NE  220\n3    S 1382\n4    W  422\n```\n:::\n\n```{.r .cell-code}\npop.strata.sizes <- rename(pop.strata.sizes, region = Var1, popsize = Freq)\nag.str.opt2 <- ag.str %>% left_join(pop.strata.sizes)\n```\n:::\n\n\n### 2. Call `svydesign`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nagpop.str.dsgn <- svydesign(id = ~1, strata = ~region, weights = ~wt, \n                            fpc = ~popsize, \n                            # fpc = option1.fpc # This would be Option 1\n                            data= ag.str.opt2)\n```\n:::\n\n\n### 3. Calculate total, SE and CI\n\nNote the degrees of freedom for a CI under a stratified sample is $n-H$, which can be extracted from the `svydesign` object using the `degf` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(str.total <- svytotal(~acres92, agpop.str.dsgn))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            total       SE\nacres92 943570979 50311761\n```\n:::\n\n```{.r .cell-code}\nconfint(str.total, level = .95, df = degf(agpop.str.dsgn))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            2.5 %     97.5 %\nacres92 844556893 1042585066\n```\n:::\n:::\n\n\n::: {.callout-tip icon=\"true\"}\n### Example: Farmland in 1992\n\n:::\n\n:::{.callout-warning icon=false}\n### Estimating vehicle information for the entire USA. \n\n:::\n\n:::{.callout-warning icon=false collapse=\"true\" appearance=minimal}\n### Solution\n\n\n:::\n",
    "supporting": [
      "cn04-stratified_sampling_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}