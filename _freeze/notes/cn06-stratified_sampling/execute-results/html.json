{
  "hash": "1283e5cf2ee9923a32a749ab6b74a463",
  "result": {
    "markdown": "---\ntitle: \"Stratified Sampling\"\ndescription: \"A method to use additional information about the population in the survey design. Lohr Ch 3. \"\nauthor: DRAFT\ndate: 3/20/23\nexecute: \n  error: true\n  warning: false\n  message: false\n---\n\n\n# What is Stratified Sampling \n\n\n## Overview\n\n* A sampling technique in which we divide the desired population into subgroups called _strata_\n* Each individual is necessarily in a single strata; no overlap within strata\n* All strata consist of the entire population\n* An SRS is taken from each strata, then results can be pooled to make inferences about the entire population\n\n### Why Use A Stratified Sample?\n\n* Protection from bad samples; less likely of drawing a non representative sample through pure chance\n* Want data of known subgroups (i.e.,  if we are interested in people’s heights, we know that men tend to be taller than women)\n* Convenience / cost effectiveness \n– At what point will this compromise the legitimacy of the study? \n* Lowers variance when done properly; variance within each strata is likely lower than the population variance\n* you do not have to sample the same fraction of observations in each stratum. If the variability is higher in a certain strata then you can try to reduce the variability of the estimated total by taking more observations from that stratum. \n:::{.callout-tip icon=true}\n\n### Motivating Example - Estimating the average number of farm acres.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here); library(tidyverse)\nlibrary(sampling); library(survey)\nagpop <- read_csv(here(\"data\", \"agpop.csv\"))\n```\n:::\n\n\nIn Example 2.6  we took a SRS to find the average number of farm acres per county. Even though our methods of taking an SRS were correct, some areas of the country were over or underrepresented due to the variability in the size of farms in different regions in the country. An example of this would be that western states in the U.S tend to be larger, and therefore tend to have larger farms. \n\nTo try and fix this, we can use a stratified sample can give balance to the sample on the stratifying variable, which in this case would be region that the farms are located. \n:::\n\nTo begin, we can divide our data into four regions (these are the strata): \n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(agpop$region) # the four regions and their names\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"W\"  \"S\"  \"NE\" \"NC\"\n```\n:::\n:::\n\n\nPreviously we sampled 10% of the population with an SRS, and so to be able to compare our results with our stratified sample, we should sample 10% of the population from each strata through four separate and independent SRS's. \n\nThe process to do this would be to take the four regions, number off the counties that are in the region, calculate what number of counties is 10% of the total number of counties in the region, and select that many numbers from the list of numbered counties. \n\n> _Details on how to do this in R is covered in a later section. For now we will use the `agstrat` dataset from the book as the stratified sample._ \n\n\n::: {.cell}\n\n```{.r .cell-code}\nagstrat <- read_csv(here(\"data\", \"agstrat.csv\"))\n```\n:::\n\n\n\n:::{.callout-tip icon=true}\n### Exploring the distribution of farm acreage in 1992 by region.\n\n\n::: {.cell .fig-cap-location-top}\n\n```{.r .cell-code}\nboxplot(acres92/10^6 ~ region, data = agstrat,\n        xlab = \"Region\", ylab = \"Millions of Acres\")\n```\n\n::: {.cell-output-display}\n![The thick line for each region is the median of the sample data from that region. The upper and lower horizontal lines of the boxes are the 25th and 75th percentiles.](cn06-stratified_sampling_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nThe Northeast has the lowest median and the smallest variance. The West has the highest median and the highest mean and variance. The distribution of farm acreage appears to to be positively skewed in each region.\n\n:::\n\n:::{.callout-warning icon=false}\n### :star: You try it. \nExplore the distribution of farm acreage in 1987 by region. Create a table of summary statistics and a boxplot. Discuss your findings. \n:::\n\n:::{.callout-warning icon=false collapse=\"true\" appearance=minimal}\n### Solution\n\n::: {.cell}\n\n```{.r .cell-code}\nagstrat %>%\n  group_by(region) %>%\n  summarize(y.bar = mean(farms87),\n            s2 = var(farms87),\n            n. =n())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 4\n  region y.bar      s2    n.\n  <chr>  <dbl>   <dbl> <int>\n1 NC      837. 156050.   103\n2 NE      605. 175660.    21\n3 S       610. 231169.   135\n4 W       615. 275507.    41\n```\n:::\n\n```{.r .cell-code}\nggplot(agstrat, aes(x = region, y = farms87, fill = region)) +\n  geom_boxplot() +\n  labs(title = \"Box Plot of Farm acreage in 1987 by Region\",\n       x = \"Region\",\n       y = \"Acreage\")\n```\n\n::: {.cell-output-display}\n![](cn06-stratified_sampling_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n:::\n\n:::{.callout-important}\n### MISSING INFO\nThis group needs to add text information here. Interpret your numbers and plots in context of the purpose of the motivating example. \n:::\n\n# Theory & Weights (Lohr 3.2, 3.3)\n\n\n\n\n# Selecting a Stratified Random Sample\n\n\n## Using Base R\n\n\n## Using the `strata` function from the `sampling` package\n\n1. Sort the data by the stratification variable\n\n::: {.cell}\n\n```{.r .cell-code}\nagpop.sorted <- agpop %>% arrange(region)\n```\n:::\n\n\n2. Specify the desired within-strata sample sizes $n_{k}$. The different methods on how to allocate sample sizes to strata is covered in the next section.\n\n::: {.cell}\n\n```{.r .cell-code}\nn.k <- c(103, 21, 135, 41)\n```\n:::\n\n\n3. Create the sampling index of records to select using the `strata` function with arguments specifying the strata names, strata size, and sampling method within strata. \n\n::: {.cell}\n\n```{.r .cell-code}\nstrat.idx <- sampling::strata(data = agpop.sorted, stratanames = \"region\", \n                    size = n.k, method = \"srswor\")\n```\n:::\n\n\n:warning: Package conflicts can occur with the `strata` function. If it is not working for you, use the `sampling::strata` method of calling the function to ensure you are using the correct version of the `strata` function from the `sampling` package. \n\n4. Extract the data records that correspond to the sampling index. \n\n::: {.cell}\n\n```{.r .cell-code}\nag.str <- getdata(agpop.sorted, strat.idx)\nhead(ag.str)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            county state acres92 acres87 acres82 farms92 farms87 farms82\n27  DECATUR COUNTY    IA  261494  278714  300684     648     715     769\n38   GRUNDY COUNTY    IA  317205  319657  320558     853    1037    1135\n55  KOSSUTH COUNTY    IA  615034  599153  611480    1592    1718    1885\n58   LOUISA COUNTY    IA  191291  198855  208670     554     634     699\n62  MAHASKA COUNTY    IA  314887  328093  336033    1075    1193    1265\n123 EDWARDS COUNTY    IL  116312  132563  120442     325     387     422\n    largef92 largef87 largef82 smallf92 smallf87 smallf82 region ID_unit\n27        52       54       56       20       34       37     NC      27\n38        55       41       34       88      108      107     NC      38\n55        82       69       64       79      100      116     NC      55\n58        30       28       21       29       43       43     NC      58\n62        32       27       22       93       95       87     NC      62\n123       30       31       23       14       18       28     NC     123\n          Prob Stratum\n27  0.09772296       1\n38  0.09772296       1\n55  0.09772296       1\n58  0.09772296       1\n62  0.09772296       1\n123 0.09772296       1\n```\n:::\n:::\n\n\n5. Calculate the sampling weights using the inclusion probabilities (these were created as the variable `Prob` when you used the `strata` function)\n\n::: {.cell}\n\n```{.r .cell-code}\nag.str$wt <- 1/ag.str$Prob\nhead(ag.str)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            county state acres92 acres87 acres82 farms92 farms87 farms82\n27  DECATUR COUNTY    IA  261494  278714  300684     648     715     769\n38   GRUNDY COUNTY    IA  317205  319657  320558     853    1037    1135\n55  KOSSUTH COUNTY    IA  615034  599153  611480    1592    1718    1885\n58   LOUISA COUNTY    IA  191291  198855  208670     554     634     699\n62  MAHASKA COUNTY    IA  314887  328093  336033    1075    1193    1265\n123 EDWARDS COUNTY    IL  116312  132563  120442     325     387     422\n    largef92 largef87 largef82 smallf92 smallf87 smallf82 region ID_unit\n27        52       54       56       20       34       37     NC      27\n38        55       41       34       88      108      107     NC      38\n55        82       69       64       79      100      116     NC      55\n58        30       28       21       29       43       43     NC      58\n62        32       27       22       93       95       87     NC      62\n123       30       31       23       14       18       28     NC     123\n          Prob Stratum       wt\n27  0.09772296       1 10.23301\n38  0.09772296       1 10.23301\n55  0.09772296       1 10.23301\n58  0.09772296       1 10.23301\n62  0.09772296       1 10.23301\n123 0.09772296       1 10.23301\n```\n:::\n:::\n\n\n5b. Check that the sampling weights sum to the stratum population sizes. \n\n::: {.cell}\n\n```{.r .cell-code}\nag.str %>% group_by(region) %>% summarize(sum.wts = sum(wt))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 2\n  region sum.wts\n  <chr>    <dbl>\n1 NC        1054\n2 NE         220\n3 S         1382\n4 W          422\n```\n:::\n\n```{.r .cell-code}\ntable(agpop.sorted$region)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  NC   NE    S    W \n1054  220 1382  422 \n```\n:::\n:::\n\n\n:::{.callout-important}\n### Warning\nIf they do not sum to the stratum population sizes, you have made a mistake somewhere in the calculations for the weights or strata sizes. \n:::\n\n# Computing Statistics from a Stratified Random Sample\n\n## Setup the information for the survey design. \n\n### Specify weights\n\nWe created the weights in the dataset in the the last step. \n\n### Specify fpc\n\nWe need to create a vector of fpc's that are equal to the strata population size. In a SRS, we used `fpc = rep(N,n)`. This create a vector that contains the value `N`, repeated `n` times. In this case, we need to match the strata population size to each record from that strata. \n\nOption 1: Create a vector that repeats the values in the vector `N.k`, each `n.k` times. \n:::{.callout-tip icon=true}\n#### Example\n\n::: {.cell}\n\n```{.r .cell-code}\nex.N.k <- c(10,25,50) # example population sizes\nex.n.k <- c(2,5,10)   # example strata sizes\nrep(ex.N.k, ex.n.k)   \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 10 10 25 25 25 25 25 50 50 50 50 50 50 50 50 50 50\n```\n:::\n:::\n\n\nThe pop size for stratum 1 is repeated twice (the size of the sample from that stratum), the pop size for stratum 2 is repeated 5 times (the sample size for stat stratum) etc. \n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\noption1.fpc <- rep(N.k, n.k)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'N.k' not found\n```\n:::\n:::\n\n\nOption 2: Merge the pop sizes onto the sample data using `region` as a joining key\n\n::: {.cell}\n\n```{.r .cell-code}\n(pop.strata.sizes <- table(agpop.sorted$region) %>% data.frame())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Var1 Freq\n1   NC 1054\n2   NE  220\n3    S 1382\n4    W  422\n```\n:::\n\n```{.r .cell-code}\npop.strata.sizes <- rename(pop.strata.sizes, region = Var1, popsize = Freq)\nag.str.opt2 <- ag.str %>% left_join(pop.strata.sizes)\n```\n:::\n\n\n### Call `svydesign`\n\n::: {.cell}\n\n```{.r .cell-code}\nagpop.str.dsgn <- svydesign(id = ~1, strata = ~region, weights = ~wt, \n                            fpc = ~popsize, \n                            # fpc = option1.fpc # This would be Option 1\n                            data= ag.str.opt2)\n```\n:::\n\n\n## Calculate mean, SE and CI\nNote the degrees of freedom for a CI under a stratified sample is $n-H$, which can be extracted from the `svydesign` object using the `degf` function. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n(str.total <- svymean(~acres92, agpop.str.dsgn))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          mean    SE\nacres92 321094 18231\n```\n:::\n\n```{.r .cell-code}\nconfint(str.total, level = .95, df = degf(agpop.str.dsgn))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           2.5 %   97.5 %\nacres92 285215.6 356972.3\n```\n:::\n:::\n\n\nCompare these to our prior \"hand\" calculated values (and approximate 95% CI): \n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "cn06-stratified_sampling_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}