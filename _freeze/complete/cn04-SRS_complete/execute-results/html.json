{
  "hash": "cf2d001a8b317e807e9f970550d8f42c",
  "result": {
    "markdown": "---\ntitle: \"Simple Random Sampling (Lohr Ch 2.3)\"\ndescription: \"SRS is the basic form of probability sampling, and serves as the basis for more complicated forms.\"\ndate: 2/20/23\nexecute: \n  cache: true\n---\n\n\n::: {.callout-note appearance=\"minimal\"}\nThese notes use functions from the `sampling` package.\n:::\n\n\n::: {.cell hash='cn04-SRS_complete_cache/html/unnamed-chunk-1_a3e0c168ca1a423a9ade1dce9becfee4'}\n\n:::\n\n\n# Introduction\n\nRecall there are two ways to draw simple random samples, with and without replacement.\n\n::: callout-important\n### Definition: Simple random sample (SRSWR) with replacement:\n\nA SRSWR of size $n$ from a population of size $N$ can be thought of as drawing $n$ independent samples of size 1. Each unit has the same probability of selection: $\\delta_{i} = \\frac{1}{N}$\n\nThe procedure is repeated until the sample has $n$ units, which may include duplicates.\n:::\n\n::: callout-important\n### Definition: Simple random sample (SRS) without replacement:\n\nA SRS of size $n$ is selected so that every possible subset of $n$ distinct units in the population has the same probability of being selected as the sample. There are $\\binom{N}{n}$ possible samples, resulting in a selection probability for an individual unit $\\delta_{i} = \\frac{n}{N}$. (See Lohr 2.10 and Appendix A for derivation)\n:::\n\n# Intentionality in sampling\n\nRandom does not mean haphazard, contrary it's actually quite intentional. Avoid selecting a sample that you \"feel\" is random or representative of the population. These practices can lead to bias and lack of generalizability.\n\n::: {.callout-note appearance=\"minimal\"}\n### :question: :busts_in_silhouette: Turn and talk\n\nSuppose you want to estimate the number of weed clusters of a certain type in a field.\n\n-   What is the population and what would you use for sampling units?\n-   How would you select a simple random sample?\n-   If a sampling unit is an area such as a square yard, does the size chosen for a sampling unit affect the accuracy of results?\n-   What considerations go into our choice of sampling unit?\n:::\n\n::: {.callout-note icon=\"false\" collapse=\"true\" appearance=\"minimal\"}\n### Class responses\n\n-   Population: All plots of that type of field\n-   Sampling unit: The plots of land\n-   Yes. Larger plots of land will have more weed clusters\n-   Feasibility, size of land, terrain type\n:::\n\nTo avoid the haphazard nature of \"blindly choosing\", or worse looking at what was sampled and changing it because \"it doesn't look random enough\", we use techniques that leverage pseudo-random number generating algorithms such as the functions discussed next\n\n# Drawing a SRS using a computer\n\nPreviously we saw how to use the `sample` function to accomplish this. An alternative is to use the functions `srswor` or `srswr` from the `sampling` package. We'll first look at how these functions differ.\n\nWhen using `sample()` the vector of data that you want to sample from is provided as the first argument, and what is returned is the values in that vector.\n\n\n::: {.cell hash='cn04-SRS_complete_cache/html/unnamed-chunk-2_d514d148e61e7f6dc2912646554613a4'}\n\n```{.r .cell-code}\nmy.animals <- c(\"Riley\", \"Meka\", \"Toki\", \"TJ\", \"DC\", \"Dodger\")\nsample(my.animals, 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Dodger\" \"DC\"     \"Toki\"  \n```\n:::\n:::\n\n\nThe functions `srswr` and `srswor` take two arguments: $n$ the sample size, and $N$ the population size, and what is returned is a vector of length $N$ that indicates how many times that position in the vector is selected.\n\n\n::: {.cell hash='cn04-SRS_complete_cache/html/unnamed-chunk-3_b521da831447b7d343c1e5b3f1d06f67'}\n\n```{.r .cell-code}\nset.seed(4134)\n(choose.these.wr <- srswr(3,6)) # with replacement\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0 2 0 1 0 0\n```\n:::\n\n```{.r .cell-code}\n(choose.these.wor <- srswor(3,6)) # without replacement\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 0 0 1 0 1\n```\n:::\n:::\n\n\nThen the `getdata()` function is used to extract the values from the population the indicated number of times.\n\n\n::: {.cell hash='cn04-SRS_complete_cache/html/unnamed-chunk-4_ce83f877cb72ee01a27f991ccd9de36d'}\n\n```{.r .cell-code}\ngetdata(my.animals, choose.these.wr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Meka\" \"Meka\" \"TJ\"  \n```\n:::\n\n```{.r .cell-code}\ngetdata(my.animals, choose.these.wor)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  ID_unit   data\n1       1  Riley\n2       4     TJ\n3       6 Dodger\n```\n:::\n:::\n\n\nThis method can be advantageous when drawing with replacement from a large dataset.\n\n## Implementation\n\n::: callout-important\n**How to draw a SRS**\n\n1.  Generate a list of all observational units in the population (sampling frame).\n2.  Assign each observational unit a unique number, from 1 to the size of the sampling frame $N$.\n3.  Use a computer to draw $n$ numbers from 1 to $N$ without replacement.\\\n4.  Subset the data to keep only the selected rows.\n:::\n\n::: {.callout-tip icon=\"true\"}\n### Example: Enrollment in Graduate Programs in Statistics\n\nThe [last time we saw this example](https://sampling-458.netlify.app/complete_notes/cn03-statistical_foundations_complete.html#variability-of-estimates), we used the `sample()` function to draw 10 values from the single variable/column `FTGradEnrollment`. Let's revisit this data and take an SRS of the entire dataset.\n\n\n::: {.cell hash='cn04-SRS_complete_cache/html/unnamed-chunk-5_d8aeefd1cc7612585d3e086c7d78c41b'}\n\n```{.r .cell-code}\nstat.phd <- readr::read_csv(here::here(\"data\", \"StatisticsPhD.csv\")) \n```\n:::\n\n:::\n\n**Using the `sample()` function**\n\n[Get in the habit of opening the data set and visually looking at your process at each step. The best way to learn is to check that you know exactly what was done at each step.]{.aside} Generate list of numbers for each observational unit, then draw 10 numbers without replacement.\n\n\n::: {.cell hash='cn04-SRS_complete_cache/html/unnamed-chunk-6_99716522e6493383b01737bb4665533d'}\n\n```{.r .cell-code}\nsampling.frame <- 1:NROW(stat.phd) #1, 2\n(get.these <- sample(sampling.frame, 10, replace=FALSE)) #3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 73 82 28 38 66 31 32  7 15 41\n```\n:::\n:::\n\n\nCreate a subset data frame with only the rows that were chosen and stored in the vector `get.these`.\n\n\n::: {.cell hash='cn04-SRS_complete_cache/html/unnamed-chunk-7_e7a8d13ff61f24334b435007145a3bf3'}\n\n```{.r .cell-code}\n(sample.stat.phd <- stat.phd[get.these, ])  #4\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 Ã— 3\n   University                    Department    FTGradEnrollment\n   <chr>                         <chr>                    <dbl>\n 1 University of Virginia        Statistics                  43\n 2 Yale University               Statistics                  36\n 3 Ohio State University         Statistics                 101\n 4 Temple University             Statistics                  40\n 5 University of North Carolina  Statistics                  78\n 6 Pennsylvania State University Statistics                  75\n 7 Purdue University             Statistics                  85\n 8 Columbia University           Biostatistics               64\n 9 Harvard University            Biostatistics               70\n10 University of Arizona         Statistics                   3\n```\n:::\n:::\n\n\n**Using the `srswor()` function**\n\n\n::: {.cell hash='cn04-SRS_complete_cache/html/unnamed-chunk-8_3057e3ef8f87aeacb176f243c8c12c0e'}\n\n```{.r .cell-code}\nselect.these <- srswor(10, NROW(stat.phd))\ngetdata(stat.phd, select.these)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   ID_unit                          University    Department FTGradEnrollment\n1       10                     Duke University    Statistics               31\n2       26       North Dakota State University    Statistics               25\n3       27             Northwestern University    Statistics               12\n4       33                     Rice University    Statistics               55\n5       40  University of Alabama - Birmingham Biostatistics               49\n6       43 University of California - Berkeley    Statistics               58\n7       53               University of Georgia    Statistics               59\n8       55                  University of Iowa Biostatistics               35\n9       69             University of Rochester Biostatistics               18\n10      72       University of Texas - Houston Biostatistics               62\n```\n:::\n:::\n\n\n# Estimation under SRS framework\n\nBelow is a table of common statistics and how they are estimated under the SRS framework.\n\n| Measure    | Unbiased Estimate $(\\hat{\\theta})$         | Estimated variance of $(\\hat{\\theta})$                             |\n|------------------|-------------------------|-----------------------------|\n| Mean       | $\\bar{y} = \\frac{1}{n}\\sum_{i\\in S} y_{i}$ | $\\hat{V}(\\bar{y}) = (1-\\frac{n}{N})\\frac{s^{2}}{n}$                |\n| Total      | $\\hat{\\tau} = N\\bar{y}$                    | $\\hat{V}(\\hat{\\tau}) = N^{2}\\hat{V}(\\bar{y})$                      |\n| Proportion | $\\hat{p} = \\bar{y}$                        | $\\hat{V}(\\hat{p}) = (1-\\frac{n}{N})\\frac{\\hat{p}(1-\\hat{p})}{n-1}$ |\n\n[This table can also be found on the \\[formulas\\](https://sampling-458.netlify.app/notes/formulas.html) page.]{.aside}\n\n* $i \\in S$ : Unit $i$ is an element in the sample $S$\n\n::: callout-important\n### Finite Population Correction\n\n$$(1-\\frac{n}{N})$$\n\nThe larger % of the population that you include in your sample (sampling fraction = $\\frac{n}{N}$), the closer you are to a census, the smaller the variability your estimate will have.\n:::\n\n* Most samples that are taken from a very large population, the fpc is close to 1.\n    * So the variance is more determined by the size of the sample, not the % of the population sampled.\n\n\n\n# Using the `survey` package.\n\n# Determining sample size\n\n# Model based theory vs Randomization based theory (Lohr 2.10, 2.11)\n\n# Closing: When should SRS be used\n\n-   comparison to systemic sampling?\n\n# Analysis under SR\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}