{
  "hash": "e2c5e7105334a8501aba4c0640d94135",
  "result": {
    "markdown": "---\ntitle: \"Stratified Sampling\"\ndescription: \"A method to use additional information about the population in the survey design.\"\nauthor: Dr. D\ndate: 3/20/23\nexecute: \n  error: true\n  warning: false\n  message: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2); library(sampling); library(survey)\n```\n:::\n\n\n# What is Stratified Sampling (Lohr 3.1)\n\n::: {.callout-tip icon=\"true\"}\n### Motivating Example\n\nValuating bank assets is a time consuming but critical action needed in the case of a bank failure where the FDIC needs to take over. These assets can be described as 1 of 7 types such as real estate mortgages, commercial loans, and consumer loans.\n\nIf we were to take a SRS of all assets from a failed bank to estimate the total dollar amount the FDIC needs to acquire, we could run into a few problems.\n\n-   Consumer loans tend to be smaller on average compared to other types, so the variance of the total could be very large, leading to an imprecise estimate\n-   A SRS won't guarantee that items from each of the 7 types of asset categories will be sampled. This would result in undercoverage bias.\n:::\n\nIt is desirable then to create a sampling design that uses information about the population to improve precision and would prevent a bad (heavily biased) estimate.\n\nIf the average value of a variable of interest is different for different subpopulations (e.g. average amount of loans in the 7 different types), then we may be able to obtain a more precise estimate by taking a **stratified** random sample.\n\n::: callout-important\n### Definition: Stratified Random Sampling\n\nThe word *stratify* means to \"arrange or deposit in layers\". That is to divide the population into $H$ non-overlapping subpopulations called **strata**.\n\nWe then draw an independent probability sample (simple random sample) from each strata, then pool the information to obtain overall population estimates.\n:::\n\n::: {.callout-tip icon=\"true\"}\n### Example: Revisiting farmland size\n\nLet's reconsider the estimate for the average number of acres devoted to farms in 1992. Recall that each row in the data set represents a county in the United States. In Example 2.6 we took a 10% SRS from the entire population and looked at the distribution of `farms92`.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nagpop <- readr::read_csv(here::here(\"data\", \"agpop.csv\"))\nset.seed(8126834)\nN <- nrow(agpop)\nindex <- srswor(300,N)\nagsrs <- getdata(agpop,index)\n\nggplot(agsrs, aes(x=acres92)) + geom_histogram()\n```\n\n::: {.cell-output-display}\n![The number of acres devoted to farms in 1992 is very skewed. Most counties have fewer than 500k acres in farms, where some have more than 1.5M acres.](cn06_files/figure-html/unnamed-chunk-2-1.png){width=384}\n:::\n:::\n\n\n:question: What if this large variance is because counties in the West are physically larger than those in the East? (e.g. LA County is HUGE). The frequency table below confirms that there are many more counties (rows in the data set) from the North Central and Southern compared to from the West or Northeast.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(agpop$region)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  NC   NE    S    W \n1054  220 1382  422 \n```\n:::\n:::\n\n\nInstead of taking a 10% sample from the entire population, let's stratify by region first, and then take a 10% sample within region. Review Table and Figure 3.1. What do you notice about the sampled proportion within region, and the sample average and variance within regions?\n\n![](../figs/table_3_1.png)\n\n![](../figs/fig3_1.jpg)\n\nThings to notice:\n\n-   West has highest mean, and highest variance\n-   Distribution of acerage is still skewed right within region\n\n## Estimating population parameters\n\nSince a SRS was taken from within each strata, we can use the [same equations](https://sampling-458.netlify.app/notes/formulas.html#simple-random-sample) from SRS to estimate the population parameters for each stratum.\n\n-   Overall Total = sum of within strata totals\n-   Variance of the overall total = sum of variances of totals\n\n## Gain from stratification\n\n-   Observations within strata are more similar to each other, than they are to the population as a whole\n-   reduction in variance in individual strata can lead to a reduced variance for the population estimate.\n\n::: callout-important\n### Definition: Relative gain from stratification\n\n$$\n\\frac{\\hat{Var_{strata}}}{\\hat{Var_{SRS}}}\n$$\n:::\n\nFrom the Farm example, this ratio was calculated to be 0.75. That means we would only need 0.75\\*300 = 225 observations from a stratified sample to obtain the same precision as from a SRS of 300.\n\n> By sampling within strata, we are \"borrowing\" information from other similar observations.\n\n## closing thoughts\n\n-   Don't have to sample the same % from each strata\n    -   Could see a greater reduction in variance with an increased sampling fraction from the West.\n\n# Theory of Stratified Sampling (Lohr 3.2)\n\n## Notation\n\n-   $h=1 \\ldots H$ strata\n-   strata membership of every unit in the population\n-   $y_{hj}$ value of the $j$th unit in strata $h$\n-   $\\sum_{j=1}^{n_{h}}$ sum of *all* units in strata $h$\n-   $\\sum_{j}$ sum over the units that were sampled from in strata $h$\n\n| Measure                   | Population $(\\theta)$                                                  | Sample $(\\hat{\\theta})$                                     |\n|------------------|-----------------------------|-----------------------------|\n| Sample size in strata $h$ | $N_{h}$                                                                | $n_{h}$                                                     |\n| Overall sample size       | $N = \\sum^{H}_{h=1} N_{h}$                                             | $n = \\sum^{H}_{h=1} n_{h}$                                  |\n| Total in strata $h$       | $\\tau_{h} = \\sum_{j=1}^{N_{h}} y_{hj}$                                 | $\\hat{\\tau}_{h} = N_{h}\\bar{y_h}$                           |\n| Overall total             | $\\tau = \\sum_{h=1}^{H} \\tau_{h}$                                       | $\\hat{\\tau}_{str} = \\sum_{h=1}^{H}N_{h}\\bar{y}_{h}$         |\n| Mean in strata $h$        | $\\mu_{h} = \\frac{\\tau_{h}}{N_{h}}$                                     | $\\bar{y}_{h} = \\frac{1}{n_{h}}\\sum_{j} y_{hj}$              |\n| Overall mean              | $\\mu = \\frac{\\tau}{N}$                                                 | $\\bar{y}_{str} = \\sum_{h=1}^{H} \\frac{N_{h}}{N}\\bar{y}_{h}$ |\n| Variance                  | $\\sigma_{h}^2 = \\frac{1}{N_{h}-1}\\sum_{j=1}^{N_{h}}(y_{hj}-\\mu_{h})^2$ | $s_{h}^2 = \\frac{1}{n_{h}-1}\\sum_{j}(y_{hj}-\\bar{y}_{h})^2$ |\n| Proportion$^*$            | $p = \\mu$                                                              | $\\hat{p} = \\bar{y}$                                         |\n\n-   $\\bar{y}_{str}$ is a weighted average of the sample stratum means.\n\n## Bias and variance of estimators \n\n-   Both are unbiased estimators $E[\\bar{y}_{str}] = \\mu; E[\\hat{\\tau}_{str}] = \\tau$\n\n-   Variance of the estimator for the total: \n$$\n    \\hat{V}\\big(\\hat{\\tau}_{str}\\big) = \\sum_{h=1}^{H} \\Big(1 - \\frac{n_{h}}{N_{h}}\\Big)N^{2}_{h}\\frac{s^{2}_{h}}{n_{h}}\n$$\n\n-   Variance of the estimator for the mean \n$$\n    \\hat{V}\\big(\\bar{y}_{str}\\big) = \\frac{1}{N^2}\\hat{V}\\big(\\hat{\\tau}_{str}\\big)\n$$\n\n-   Confidence intervals can be calculated as\n\n$$\n \\bar{y}_{str} \\pm t_{\\alpha/2, n-H}\\sqrt{\\hat{V}\\big(\\bar{y}_{str}\\big)}\n$$\n\n\n:::{.callout-tip icon=true}\n### Example: Estimate the total number of farm acres in 1992 (Table 3.2)\nThe best way to understand an equation, is to try to use it to calculate a number. \n:::\n\n1. Import the population data, and the stratified sample that the book authors use. \n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here); library(tidyverse)\nagpop <- read_csv(here(\"data\", \"agpop.csv\"))\nagstrat <- read_csv(here(\"data\", \"agstrat.csv\"))\n```\n:::\n\n\nTo keep my data frame simple, I am going to create a new data set `farm92` that only contains the $y$ value of interest, `acres92`, and the stratification variable `region`. \n\n::: {.cell}\n\n```{.r .cell-code}\nfarm92 <- agstrat %>% select(region, acres92)\n```\n:::\n\n\n1. Calculate summary statistics for each region\n\n::: {.cell}\n\n```{.r .cell-code}\n(strata.summary.stats <- farm92 %>% \n   group_by(region) %>% \n   summarize(y.bar.h = mean(acres92),  \n             s2.h    = var(acres92),\n             n.h     = n()))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 4\n  region y.bar.h          s2.h   n.h\n  <chr>    <dbl>         <dbl> <int>\n1 NC     300504.  29618183543.   103\n2 NE      97630.   7647472708.    21\n3 S      211315.  53587487856.   135\n4 W      662296. 396185950266.    41\n```\n:::\n:::\n\n\n\n2. Calculate Population region sizes, add this vector to the data frame created above.\n\n::: {.cell}\n\n```{.r .cell-code}\n(region.size <- agpop %>% group_by(region) %>% tally())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 2\n  region     n\n  <chr>  <int>\n1 NC      1054\n2 NE       220\n3 S       1382\n4 W        422\n```\n:::\n\n```{.r .cell-code}\nstrata.summary.stats$N.h <- region.size$n\nstrata.summary.stats\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  region y.bar.h          s2.h   n.h   N.h\n  <chr>    <dbl>         <dbl> <int> <int>\n1 NC     300504.  29618183543.   103  1054\n2 NE      97630.   7647472708.    21   220\n3 S      211315.  53587487856.   135  1382\n4 W      662296. 396185950266.    41   422\n```\n:::\n:::\n\n\n3. Calculate the sample total $\\hat{\\tau}_{h} = N_{h}\\bar{y_h}$.\n\n::: {.cell}\n\n```{.r .cell-code}\nstrata.summary.stats$tau.hat.h <- strata.summary.stats$y.bar.h * strata.summary.stats$N.h\nstrata.summary.stats\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 6\n  region y.bar.h          s2.h   n.h   N.h  tau.hat.h\n  <chr>    <dbl>         <dbl> <int> <int>      <dbl>\n1 NC     300504.  29618183543.   103  1054 316731380.\n2 NE      97630.   7647472708.    21   220  21478558.\n3 S      211315.  53587487856.   135  1382 292037391.\n4 W      662296. 396185950266.    41   422 279488706.\n```\n:::\n:::\n\n\n4. Calculate the within-strata variance of this total $\\Big(1 - \\frac{n_{h}}{N_{h}}\\Big)N^{2}_{h}\\frac{s^{2}_{h}}{n_{h}}$.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstrata.summary.stats <- strata.summary.stats %>%\n  mutate(var.tau.hat.h = \n           (1 - n.h/N.h)*(N.h^2)*(s2.h/n.h)\n  )\nstrata.summary.stats\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 7\n  region y.bar.h          s2.h   n.h   N.h  tau.hat.h var.tau.hat.h\n  <chr>    <dbl>         <dbl> <int> <int>      <dbl>         <dbl>\n1 NC     300504.  29618183543.   103  1054 316731380.       2.88e14\n2 NE      97630.   7647472708.    21   220  21478558.       1.59e13\n3 S      211315.  53587487856.   135  1382 292037391.       6.84e14\n4 W      662296. 396185950266.    41   422 279488706.       1.55e15\n```\n:::\n:::\n\n\n5. Calculate the overall total $\\hat{\\tau}_{str}$ and variance $\\hat{V}\\big(\\hat{\\tau}_{str}\\big)$ by summing these values across the strata.\n\n::: {.cell}\n\n```{.r .cell-code}\n(tau.hat.str <- sum(strata.summary.stats$tau.hat.h))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 909736035\n```\n:::\n\n```{.r .cell-code}\n(V.tau.hat.str <- sum(strata.summary.stats$var.tau.hat.h))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2.541899e+15\n```\n:::\n:::\n\n\nThe estimated total number of acres devoted to farming is 909,736,035, with standard error 50,417,248. These numbers match those found in Table 3.2.  \n\nWe can then use these totals to get $\\bar{y}_{str}$ and $\\hat{V}\\big(\\bar{y}_{str}\\big)$\n\n::: {.cell}\n\n```{.r .cell-code}\n(y.bar.str <- tau.hat.str / sum(strata.summary.stats$N.h))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 295560.8\n```\n:::\n\n```{.r .cell-code}\n(V.y.bar.str <- V.tau.hat.str / (sum(strata.summary.stats$N.h)^2))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 268300231\n```\n:::\n:::\n\n\nWe estimate the average number of acres devoted to farming per county as 295,560.8 with standard error 16,379.87. These numbers match those found in the text below Table 3.2.\n\n# Sampling Weights (Lohr 3.3)\n\n* Weights are still the inverse of the inclusion probability, but there may be different inclusion probabilities in different strata. \n    - So weights are not the same for all units\n* $w_{hj} = \\frac{N_h}{n_h}$\n    - This makes sense because $w_{i} = \\frac{N}{n}$ in a SRS, and in stratified sampling we do a SRS within each strata $h$. So the weights are the ratio of pop/sample size within strata.\n\n* Estimator for pop'n total can be written as: \n$$\n\\hat{\\tau}_{str} = \\sum_{h=1}^{H}\\sum_{j}w_{hj}y_{hj}\n$$\n\n* Reminder: Sampling weights can be thought of as the number of units in the pop'n represented by each sample member. \n\n:::{.callout-tip icon=true}\n### Example Figure 3.2\n![](../figs/fig3_2.jpg)\n:::\n\n* Stratum 1 has $N_{1}=20$ and $n_{1} = 10$, so each sampled unit counts for 2 population units. \n* Stratum 3 has $N_{3} = 420$ and $n_{3} = 20$, so each sampled unit counts for 21 population units.\n\n:::{.callout-tip icon=true}\n### Example: Re-Estimate the total number of farm acres in 1992 using sample weights\n\nThe weights need to be applied to the individual data points, $y_{jh}$, then all the above calculations can occur again. \n\n1. Calculate stratum weights\n\n::: {.cell}\n\n```{.r .cell-code}\nstrat.weights <- data.frame(\n  region = table(agpop$region) %>% names(),\n  N.h = table(agpop$region) %>% as.vector(), \n  n.h = table(agstrat$region) %>% as.vector()\n)\nstrat.weights$wt <- strat.weights$N.h / strat.weights$n.h\nstrat.weights\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  region  N.h n.h       wt\n1     NC 1054 103 10.23301\n2     NE  220  21 10.47619\n3      S 1382 135 10.23704\n4      W  422  41 10.29268\n```\n:::\n:::\n\n\n2. Merge those weights back onto the data, joining by region. \n\n::: {.cell}\n\n```{.r .cell-code}\nagpop <- agpop %>% left_join(strat.weights)\ntable(agpop$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n10.2330097087379  10.237037037037 10.2926829268293 10.4761904761905 \n            1054             1382              422              220 \n```\n:::\n:::\n\n\n3. Calculate the weighted values $w_{hj}y_{hj}$\n\n::: {.cell}\n\n```{.r .cell-code}\nagpop$wtd.acres92 <- agpop$acres92 * agpop$wt \n```\n:::\n\n\n4. Recalculate weighted mean and variances within strata. Also re-merge the `strat.weights` data back onto this summary so we can calculate the within strata variance. \n\n::: {.cell}\n\n```{.r .cell-code}\nwt.str.sum.stats <- agpop %>%\n   group_by(region) %>% \n   summarize(y.bar.h = mean(wtd.acres92),  \n             s2.h    = var(wtd.acres92))\n\n(wt.str.sum.stats <- wt.str.sum.stats %>% left_join(strat.weights) )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 6\n  region  y.bar.h    s2.h   N.h   n.h    wt\n  <chr>     <dbl>   <dbl> <int> <int> <dbl>\n1 NC     3335459. 7.71e12  1054   103  10.2\n2 NE      949342. 6.91e11   220    21  10.5\n3 S      2038608. 6.24e12  1382   135  10.2\n4 W      7445150. 7.40e13   422    41  10.3\n```\n:::\n:::\n\n\n5. Re-calculate $\\hat{\\tau}_{h}$ and $\\hat{V}(\\hat{\\tau}_{h})$.\n\n::: {.cell}\n\n```{.r .cell-code}\nwt.str.sum.stats <- wt.str.sum.stats %>% \n    mutate(tau.hat.h = y.bar.h * N.h, \n           var.tau.hat.h = (1 - n.h/N.h)*(N.h^2)*(s2.h/n.h))\n```\n:::\n\n\n6. Re-calculate the overall total $\\hat{\\tau}_{str}$ and variance $\\hat{V}\\big(\\hat{\\tau}_{str}\\big)$ by summing these values across the strata.\n\n::: {.cell}\n\n```{.r .cell-code}\n(tau.hat.str <- sum(wt.str.sum.stats$tau.hat.h))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 9683638877\n```\n:::\n\n```{.r .cell-code}\n(V.tau.hat.str <- sum(wt.str.sum.stats$var.tau.hat.h))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4.461667e+17\n```\n:::\n:::\n\n\n> Hmmm..... something isn't right here.\n\n\n:::{.callout-warning icon=false}\n### :star: You try it. \nCalculate the strata weights for the caribou example from Table 3.4, and re-estimate the total number of caribou using these weights. \n:::\n\n\n\n  \n\n\n# Selecting a Stratified Random Sample\n\n\n## Using Base R\n\n\n## Using the `strata` function from the `sampling` package\n\n1. Sort the data by the stratification variable\n\n::: {.cell}\n\n```{.r .cell-code}\nagpop.sorted <- agpop %>% arrange(region)\n```\n:::\n\n\n2. Specify the desired within-strata sample sizes $n_{k}$. The different methods on how to allocate sample sizes to strata is covered in the next section.\n\n::: {.cell}\n\n```{.r .cell-code}\nn.k <- c(103, 21, 135, 41)\n```\n:::\n\n\n3. Create the sampling index of records to select using the `strata` function with arguments specifying the strata names, strata size, and sampling method within strata. \n\n::: {.cell}\n\n```{.r .cell-code}\nstrat.idx <- sampling::strata(data = agpop.sorted, stratanames = \"region\", \n                    size = n.k, method = \"srswor\")\n```\n:::\n\n\n:warning: Package conflicts can occur with the `strata` function. If it is not working for you, use the `sampling::strata` method of calling the function to ensure you are using the correct version of the `strata` function from the `sampling` package. \n\n4. Extract the data records that correspond to the sampling index. \n\n::: {.cell}\n\n```{.r .cell-code}\nag.str <- getdata(agpop.sorted, strat.idx)\nhead(ag.str)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             county state acres92 acres87 acres82 farms92 farms87 farms82\n2      ADAMS COUNTY    IA  239800  243607  254071     643     688     737\n6     BENTON COUNTY    IA  427215  419480  441810    1325    1434    1585\n12    BUTLER COUNTY    IA  315448  328114  336000    1146    1294    1467\n13   CALHOUN COUNTY    IA  345567  342160  351373     899     992    1164\n28  DELAWARE COUNTY    IA  336131  353940  351861    1367    1452    1481\n30 DICKINSON COUNTY    IA  202249  211002  227557     554     593     652\n   largef92 largef87 largef82 smallf92 smallf87 smallf82  N.h n.h       wt\n2        38       32       21       40       50       33 1054 103 10.23301\n6        56       43       34      101      105      102 1054 103 10.23301\n12       32       23       21      116      129      139 1054 103 10.23301\n13       58       35       28       71       61       78 1054 103 10.23301\n28       25       22       15      112      105       95 1054 103 10.23301\n30       30       34       31       38       47       43 1054 103 10.23301\n   wtd.acres92 region ID_unit       Prob Stratum\n2      2453876     NC       2 0.09772296       1\n6      4371695     NC       6 0.09772296       1\n12     3227982     NC      12 0.09772296       1\n13     3536190     NC      13 0.09772296       1\n28     3439632     NC      28 0.09772296       1\n30     2069616     NC      30 0.09772296       1\n```\n:::\n:::\n\n\n5. Calculate the sampling weights using the inclusion probabilities (these were created as the variable `Prob` when you used the `strata` function)\n\n::: {.cell}\n\n```{.r .cell-code}\nag.str$wt <- 1/ag.str$Prob\nhead(ag.str)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             county state acres92 acres87 acres82 farms92 farms87 farms82\n2      ADAMS COUNTY    IA  239800  243607  254071     643     688     737\n6     BENTON COUNTY    IA  427215  419480  441810    1325    1434    1585\n12    BUTLER COUNTY    IA  315448  328114  336000    1146    1294    1467\n13   CALHOUN COUNTY    IA  345567  342160  351373     899     992    1164\n28  DELAWARE COUNTY    IA  336131  353940  351861    1367    1452    1481\n30 DICKINSON COUNTY    IA  202249  211002  227557     554     593     652\n   largef92 largef87 largef82 smallf92 smallf87 smallf82  N.h n.h       wt\n2        38       32       21       40       50       33 1054 103 10.23301\n6        56       43       34      101      105      102 1054 103 10.23301\n12       32       23       21      116      129      139 1054 103 10.23301\n13       58       35       28       71       61       78 1054 103 10.23301\n28       25       22       15      112      105       95 1054 103 10.23301\n30       30       34       31       38       47       43 1054 103 10.23301\n   wtd.acres92 region ID_unit       Prob Stratum\n2      2453876     NC       2 0.09772296       1\n6      4371695     NC       6 0.09772296       1\n12     3227982     NC      12 0.09772296       1\n13     3536190     NC      13 0.09772296       1\n28     3439632     NC      28 0.09772296       1\n30     2069616     NC      30 0.09772296       1\n```\n:::\n:::\n\n\n5b. Check that the sampling weights sum to the stratum population sizes. \n\n::: {.cell}\n\n```{.r .cell-code}\nag.str %>% group_by(region) %>% summarize(sum.wts = sum(wt))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 2\n  region sum.wts\n  <chr>    <dbl>\n1 NC        1054\n2 NE         220\n3 S         1382\n4 W          422\n```\n:::\n\n```{.r .cell-code}\ntable(agpop.sorted$region)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  NC   NE    S    W \n1054  220 1382  422 \n```\n:::\n:::\n\n\n:::{.callout-important}\n### Warning\nIf they do not sum to the stratum population sizes, you have made a mistake somewhere in the calculations for the weights or strata sizes. \n:::\n\n# Computing Statistics from a Stratified Random Sample\n\n## Setup the information for the survey design. \n\n### Specify weights\n\nWe created the weights in the dataset in the the last step. \n\n### Specify fpc\n\nWe need to create a vector of fpc's that are equal to the strata population size. In a SRS, we used `fpc = rep(N,n)`. This create a vector that contains the value `N`, repeated `n` times. In this case, we need to match the strata population size to each record from that strata. \n\nOption 1: Create a vector that repeats the values in the vector `N.k`, each `n.k` times. \n:::{.callout-tip icon=true}\n#### Example\n\n::: {.cell}\n\n```{.r .cell-code}\nex.N.k <- c(10,25,50) # example population sizes\nex.n.k <- c(2,5,10)   # example strata sizes\nrep(ex.N.k, ex.n.k)   \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 10 10 25 25 25 25 25 50 50 50 50 50 50 50 50 50 50\n```\n:::\n:::\n\n\nThe pop size for stratum 1 is repeated twice (the size of the sample from that stratum), the pop size for stratum 2 is repeated 5 times (the sample size for stat stratum) etc. \n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\noption1.fpc <- rep(N.k, n.k)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'N.k' not found\n```\n:::\n:::\n\n\nOption 2: Merge the pop sizes onto the sample data using `region` as a joining key\n\n::: {.cell}\n\n```{.r .cell-code}\n(pop.strata.sizes <- table(agpop.sorted$region) %>% data.frame())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Var1 Freq\n1   NC 1054\n2   NE  220\n3    S 1382\n4    W  422\n```\n:::\n\n```{.r .cell-code}\npop.strata.sizes <- rename(pop.strata.sizes, region = Var1, popsize = Freq)\nag.str.opt2 <- ag.str %>% left_join(pop.strata.sizes)\n```\n:::\n\n\n### Call `svydesign`\n\n::: {.cell}\n\n```{.r .cell-code}\nagpop.str.dsgn <- svydesign(id = ~1, strata = ~region, weights = ~wt, \n                            fpc = ~popsize, \n                            # fpc = option1.fpc # This would be Option 1\n                            data= ag.str.opt2)\n```\n:::\n\n\n## Calculate mean, SE and CI\nNote the degrees of freedom for a CI under a stratified sample is $n-H$, which can be extracted from the `svydesign` object using the `degf` function. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n(str.total <- svymean(~acres92, agpop.str.dsgn))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          mean    SE\nacres92 288357 17463\n```\n:::\n\n```{.r .cell-code}\nconfint(str.total, level = .95, df = degf(agpop.str.dsgn))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           2.5 %   97.5 %\nacres92 253989.5 322724.7\n```\n:::\n:::\n\n\nCompare these to our prior \"hand\" calculated values (and approximate 95% CI): \n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "cn06_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}