---
title: "scratch"
---


# Confidence Intervals

In general, it is usually not enough to just give a point estimate when estimating a population parameter. Why?


## Standard Error

The _standard error_ of a statistic is the standard deviation of the sample statistic. It tells us how much the sample statistic will vary from sample to sample. In situations like above where we can examine simulated values of the sample statistic we can estimate the standard error by taking the sample standard deviation of the simulated sample statistics. In other situations we can use mathematical formulas to calculate the standard error.

:::{.callout-tip icon=true}
### Example Grad program example cont. 
Estimate the standard error for the mean enrollment in statistics PhD programs for a sample size of 10 and also a sample size of 20. 
:::

[I used the base pipe `|>` here to pass the results of the replicate function into the `sd()` function]{.aside}

```{r}
sd(many.means) #because the example above already had n=10

replicate(n=100, {
  my.sample.programs <- sample(stat.phd$FTGradEnrollment, size=20)
  mean(my.sample.programs)
}) |> sd()
```


When the distributions are relatively symmetric and bell-shaped, the 95% rule tells us that approximately 95% of the data values fall within two standard deviations of the mean. Applying the 95% rule to sampling distributions, we see that about 95% of the sample statistics will fall within two standard errors of the mean. We use this rule many times to form what we call a 95% confidence interval which gives us a range for which which we are quite confident that captures the true parameter we are trying to estimate.

When using a formula to calculate an approximate 95% confidence interval, use $2*SE$ as the margin of error. 

:::{.callout-tip icon=true}
### CI for PhD program enrollment
Based on our example, what would be a 95% confidence interval for $\mu$ the true mean total enrollment for PhD programs in statistics.
Interpret this confidence interval in context of the problem.
:::

[Wrapping the entire line of code in `()` will execute that code AND print out the results. This lets me see the results in the rendered document AND store the results in an object to call later, like in my sentence response below. ]{.aside}

```{r}
(LCL <- mean(many.means) - 2*sd(many.means))
(UCL <- mean(many.means) + 2*sd(many.means))
```

[Every time I compile these notes, I draw a different sample and will get a different numbers. To avoid conflicts in my written response, and what the code shows, I use _inline R code_ here. See the RStudio _Help --> Markdown Quick Reference_ for more information.]{.aside}

> We can be 95% confident that the true mean total enrollment for PhD programs in statistics is covered by the interval (`r paste0(round(LCL,1), " , ", round(UCL,1))`). 

